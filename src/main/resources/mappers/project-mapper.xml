<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectDAO">
	
	<select id="getAllFundingProjectList" resultType="project">
		
			<!-- 일단 test로 n으로 시작 -->
			SELECT *
			FROM project
			WHERE funding = 'y'
	</select>



	<select id="getProjectListByEmail" parameterType="project" resultType="project">
	
		SELECT * 
		FROM project
		WHERE email = #{email}
		
	</select>

 	<resultMap type="projectIntroduceImage" id="projectIntroduceImage">
		<result column="projectIntroduceImageNo" property="projectIntroduceImageNo" />
		<result column="projectNo" property="projectNo" />
		<result column="projectIntroduceImage" property="projectIntroduceImage" />
	</resultMap>


<!-- 	<resultMap type="project" id="project">
	
		<result column="projectNo" property="projectNo" />
		<result column="creator" property="creator"/>
		<result column="email" property="email" />
		
		
		<result column="goalMoney" property="goalMoney" />
		<result column="projectMainImage" property="projectMainImage" />
		<result column="projectTitle" property="projectTitle" />
		<result column="projectSubTitle" property="projectSubTitle" />
		<result column="category" property="category" />
		<result column="startDate" property="startDate"/>
		<result column="endDate" property="endDate" />
		
		<result column="projectSummary" property="projectSummary" />
		<result column="projectCaution" property="projectCaution" />
		<result column="projectIntroduceVideo" property="projectIntroduceVideo" />
		<result column="projectStory" property="projectStory" />
		
		<result column="status" property="status" />
		<result column="writeStatus" property="writeStatus" />
		
		<collection property="projectIntroduceImage" resultMap="projectIntroduceImage" />
		
	</resultMap>
	

 	<select id="getProject" parameterType="project"  resultMap="project">
 -->
 
 	<select id="getProject" parameterType="project" resultType="project">
		<!--  select project.*, projectIntroduceImage.* from(select * from project where projectNo = #{projectNo}) project join projectIntroduceImage on projectIntroduceImage.projectNo = project.projectNo
		-->
		SELECT *
		FROM project
		where projectNo = #{projectNo}	
	</select>



	<insert id="insertProject" parameterType="project">
	
	<!--
		<selectKey keyProperty="projectNo" resultType="int" order="BEFORE">
			select PROJECT_SEQ.nextval as projectNo from dual
		</selectKey> 
	-->
		<selectKey keyProperty="projectNo" resultType="int" order="AFTER">
			 SELECT project_seq.currval FROM dual
		</selectKey>
				
		INSERT INTO project(projectno, creator, email, projectTitle, goalMoney, category, projectSubTitle, projectSummary, projectcaution, projectIntroduceVideo, projectStory,writestatus)
		VALUES (project_seq.nextval, #{creator}, #{email}, #{projectTitle}, #{goalMoney}, #{category}, #{projectSubTitle}, #{projectSummary}, #{projectIntroduceVideo}, #{projectStory}, #{projectCaution}, #{writeStatus})
		
	</insert>


<!-- <select id="insertProject" parameterType="project" resultType="int">
		
		INSERT INTO project(projectNo, creator, email, projectTitle, goalMoney, category, projectSubTitle, projectsummary, projectcaution, status, informationagree, startdate, enddate, writestatus)
		VALUES ((SELECT nvl(max(projectNo), 0) + 1 from project), #{creator}, #{email}, #{projectTitle}, #{goalMoney}, #{category}, #{projectSubTitle}, #{projectsummary}, #{projectCaution}, #{status}, #{informationAgree}, #{startDate}, #{endDate}, #{writeStatus})

	    SELECT @@IDENTITY AS seq
	</select> -->
	
	<update id="updateProject" parameterType="project">
		UPDATE project SET 
		creator = #{creator}, projectTitle = #{projectTitle},  goalMoney = #{goalMoney}, 
		projectMainImage = #{projectMainImage}, category = #{category}, 
		projectsubtitle = #{projectSubTitle}, projectsummary = #{projectSummary}, 
		projectcaution = #{projectCaution}, projectIntroduceVideo = #{projectIntroduceVideo}, 
		projectStory = #{projectStory}, status = #{status}, informationagree = #{informationAgree}, 
		<if test="endDate != null">
			endDate = #{endDate},
		</if>
		writestatus = #{writeStatus}  				
		
		WHERE projectNo = #{projectNo}
	</update>
	

	<delete id="deleteProject" parameterType="project">
		DELETE FROM project WHERE
		projectNo = #{projectNo}
	</delete>
	
	
	<!-- 카테고리 -->
	<!-- 내가 카테고리 모두 선택한거 들어가는 sql문 -->
	<!-- 내가 카테고리중 카테고리중 한개라도 선택안했을때 where에 카테고리만 빼논 sql문 -->
	<select id="getShowCategorySubList" parameterType="project" resultType="project">
		
		select * from project 
		where 
		<choose> 
			<when test="category.equals('no')"> 
				funding = 'y'
			</when>
			<otherwise>
				category = #{category}
			</otherwise>
		</choose>
		and
		<choose>
			<when test="funding == 'z'">
				funding = 'y'
			</when>
			<otherwise> 
				funding = #{funding}
			</otherwise>
		</choose>
		and
		<choose>
			<when test="fundingMoney == 1">
				funding = 'y'
			</when>
			<when test="fundingMoney == 15000000"> 
				fundingMoney <![CDATA[ >= ]]> #{fundingMoney}
			</when>
			<otherwise> 
				fundingMoney <![CDATA[ >= ]]> #{fundingMoney} and fundingMoney <![CDATA[ < ]]> #{fundingMoney}+ 5000000
			</otherwise>
		</choose>
		and
		<choose>
			<when test="percent == 1"> 
				funding = 'y'
			</when>
			<when test="percent == 75">
				round(nvl(fundingMoney/decode(goalMoney,0,null,goalMoney),0)*100)<![CDATA[ >= ]]> #{percent}
			</when>
			<otherwise>
				round(nvl(fundingMoney/decode(goalMoney,0,null,goalMoney),0)*100)<![CDATA[ >= ]]> #{percent} and 
				round(nvl(fundingMoney/decode(goalMoney,0,null,goalMoney),0)*100) <![CDATA[ < ]]> #{percent}+25
			</otherwise>
		</choose>

	</select>
	
	
	<update id="updateProjectFundingMoney" parameterType="project">
	
		UPDATE project SET fundingMoney = fundingMoney + #{fundingMoney }
		WHERE projectNo = #{projectNo }
	
	</update>
		
	<update id="updateProjectDeadline">
		UPDATE project 
		SET funding = 'n'
		WHERE TO_CHAR(enddate,'YYYYMMDD') = TO_CHAR(sysdate,'YYYYMMDD') and funding = 'y'
	</update>
	
	<select id="getClosedProjectNoList" resultType="int">
	
		SELECT projectNo
		FROM project
		WHERE WHERE TO_CHAR(enddate,'YYYYMMDD') = TO_CHAR(sysdate,'YYYYMMDD')
		
	</select>
	
	
	
	
	
	
	
	
	
	

</mapper>
