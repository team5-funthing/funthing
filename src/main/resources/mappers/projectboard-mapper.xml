<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="ProjectBoardDAO">
 	
 	<!-- 글등록 -->
 	<insert id="insertProjectBoard"  parameterType="projectBoard">
		INSERT INTO projectboard(projectboardno, email, projectno, projectboardcontents, ref) 
		VALUES(projectboard_seq.nextval, #{email},#{projectNo},#{projectBoardContents}, projectboard_seq.currval )
	</insert>
	
	<!-- 글수정 -->
	<update id="updateProjectBoard" parameterType="projectBoard">
		UPDATE projectboard 
		SET projectBoardContents = #{projectBoardContents}, projectBoardDate = sysdate WHERE projectBoardNo = #{projectBoardNo}
	</update>
	
	<!-- 선택한 글 select문  -->
	<select id="getChoiceProjectBoard" parameterType="projectBoard" resultType="projectBoard">
		SELECT * FROM projectboard WHERE projectBoardNo = #{projectBoardNo}
	</select>
	
	<!-- 글삭제  -->
 	<delete id="deleateProjectBoard" parameterType="projectBoard">
		DELETE FROM projectboard WHERE projectBoardNo = #{projectBoardNo}
	</delete>
	
	
	
	<!-- 선택한 답변글 select문  -->
	<select id="getChoiceProjectBoardReply" parameterType="projectBoard" resultType="projectBoard">
		SELECT * FROM projectboard WHERE ref = #{ref} and step = #{step}
	</select>
	
	<!-- 선택한 답변글 수정 -->
	<update id="updateProjectBoardReply" parameterType="projectBoard">
		UPDATE projectboard 
		SET projectBoardContents = #{projectBoardContents}, projectBoardDate = sysdate WHERE ref = #{ref} and step = #{step}
	</update>
	
	<!-- 글삭제  -->
 	<delete id="deleateProjectBoardReply" parameterType="projectBoard">
		DELETE FROM projectboard WHERE ref = #{ref} and step = #{step}
	</delete>
 	
 	
 	<!-- 전체게시판리스트 뽑기 (조인문사용함 = 이름가져와야되서) -->
 	
 	<resultMap type="Member" id="Member">
		<result column="email" property="email" />
		<result column="name" property="name" />
		<result column="myImage" property="myImage" />
	</resultMap>

	<resultMap type="projectBoard" id="projectBoard">
		<result column="email" property="email" />
		<result column="projectNo" property="projectNo"/>
		<result column="projectBoardContents" property="projectBoardContents" />
		<result column="projectBoardDate" property="projectBoardDate" />
		<result column="projectBoardNo" property="projectBoardNo" />
		<result column="step" property="step" />
		<result column="ref" property="ref" />
		
		<collection property="Member" resultMap="Member"></collection>
	</resultMap>
	
 	<select id="getEntireProjectBoardList" parameterType="projectBoard"  resultMap="projectBoard">
		select member.*, projectboard.* from(select * from projectboard where projectNo = ${projectNo} order by ref desc, step asc ) projectboard join member on member.email = projectboard.email
	</select>
	
	
	<!-- 답글등록 -->
	<insert id="insertProjectBoardReply"  parameterType="projectBoard">
		INSERT INTO projectboard(projectboardno, email, projectno, projectboardcontents, ref, step) 
		VALUES(projectboard_seq.nextval, #{email},#{projectNo},#{projectBoardContents},#{ref},(select nvl(max(step),0)+1 from projectboard where ref = #{ref}))
	</insert>
	
	
 </mapper>