<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CreatorStatisticsDAO">

	<resultMap type="reward" id="reward">
		<result column="projectNo" property="projectNo" />
		<result column="rewardNo" property="rewardNo" />
	</resultMap>	
	
	<resultMap type="rewardSelection" id="rewardSelection">
		<result column="rewardNo" property="rewardNo" />
		<result column="orderNo" property="orderNo" />
	</resultMap>
	
	<resultMap type="paymentReserve" id="paymentReserve">
		<result column="orderNo" 			property="orderNo" />
		<result column="email" 				property="email"/>
		<result column="paymentReserveDate" property="paymentReserveDate" />
		<result column="paymentOption" 		property="paymentOption" />
		<result column="applyNo" 			property="applyNo"/>
		<result column="paymentStatus" 		property="paymentStatus" />
		<result column="deliveryAddressNo" 	property="deliveryAddressNo" />
		<result column="fundingMoney" 		property="fundingMoney" />
		<result column="additionalFundingMoney" 	property="additionalFundingMoney" />
		<result column="shippingFee" 	property="shippingFee" />
		<result column="privateName" 	property="privateName" />
		<result column="privateFundingMoney" 	property="privateFundingMoney" />
		
		<collection property="rewardSelection" resultMap="rewardSelection"></collection>
		<collection property="reward" resultMap="reward"></collection>
		
	</resultMap>
	
	<!-- 값 SUM해서 가져오기 -->
	<select id="getSumProjectAndPayment" parameterType="int" resultType="paymentReserve">

		select projectNo,sumDate, sum(fundingMoney) as sumFundingMoney from
		(select projectNo,fundingMoney, to_char(paymentReservedate,'yyyy-mm-dd')as sumDate from paymentReserve )
		group by sumDate,projectNo having projectNo = #{currentProjectNo}


	</select>
	
	<!-- 프로젝트 번호에 이루어진 결제된 리스트 가져오기   -->
	<select id="getAllProjectAndPayment" parameterType="int" resultType="paymentReserve">

		select distinct p.* from PaymentReserve p
		inner join rewardSelection R on P.orderNo = R.orderNo 
		Inner Join reward W on W.rewardNo = R.rewardNo where w.projectNo = #{currentProjectNo}
		order by paymentReservedate asc
		
	</select>
	
	
	<!-- 카운트세기 몇번의 펀딩이 이루어졌는지 알아보기 위해 -->
	<select id="getFundingPaymentCount" parameterType="int" resultType="int">
	
		select count(*) from 
		(select distinct p.* from 
		PaymentReserve p, rewardSelection R, reward W 
		where w.projectNo = #{currentProjectNo} and w.rewardNo = R.rewardNo and R.orderNo = p.orderNo order by paymentReservedate asc)	
		
	</select>
	

	
	
	
</mapper>
